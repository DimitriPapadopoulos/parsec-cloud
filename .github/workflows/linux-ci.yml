name: linux-ci

on:
  pull_request:
  push:
    branches:
      - master

env:
  rust-version: 1.62.0
  python-version: "3.9"
  poetry-version: 1.1.13

jobs:
  rust:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # pin v3.0.2
      - uses: ./.github/actions/setup-rust
        with:
          version: ${{ env.rust-version }}
          cache-key: test&build

      - name: Build rust codebase
        run: |
          cargo build --workspace
          cargo test --workspace --no-run

      - name: Test rust codebase
        run: |
          cargo test --package libparsec_crypto --features use-sodiumoxide
          cargo test --package libparsec_crypto --features use-rustcrypto

          cargo test --workspace --features mock-time --exclude libparsec_crypto

  python:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        binding: [ no-binding, rust-binding ]
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # pin v3.0.2

      - name: Install package
        run: |
          sudo apt-get -y install libfuse2 fuse desktop-file-utils

      - uses: ./.github/actions/setup-rust
        with:
          version: ${{ env.rust-version }}
          cache-key: python

      - name: Install poetry
        run: |
          export POETRY_HOME="$HOME/.poetry"
          mkdir -p "$POETRY_HOME"
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py \
            | python - --version=${{ env.poetry-version }}
          echo "$POETRY_HOME/bin" >> "$GITHUB_PATH"

      - uses: actions/setup-python@d09bd5e6005b175076f227b13d9730d56e9dcfcb  # pin v4.0.0
        with:
          python-version: ${{ env.python-version }}
          cache: poetry

      - name: Install python deps
        run: poetry install -E core -E backend --remove-untracked

      - name: Generate PyQT GUI data
        run: poetry run python misc/generate_pyqt.py

      - name: Install libparsec_python
        run: poetry run pip install oxidation/libparsec_python
        if: matrix.binding == 'rust-binding'

      - name: Basic tests
        run: poetry run pytest tests

      - name: Rust binding tests
        run: poetry run pytest tests --runrust -m rust
        if: matrix.binding == 'rust-binding'

      - name: Mountpoint tests
        run: poetry run pytest tests --runmountpoint --runslow -m mountpoint

      - name: GUI tests
        uses: GabrielBB/xvfb-action@v1
        with:
          run: |
            poetry run pip install pytest-xvfb
            poetry run pytest tests --runmountpoint --runslow --rungui -m gui

      - name: Slow tests
        run: poetry run pytest tests --runslow -m slow
