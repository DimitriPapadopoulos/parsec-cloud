# Parsec Cloud (https://parsec.cloud) Copyright (c) AGPL-3.0 2016-present Scille SAS
from __future__ import annotations

from typing import Any, Callable, Optional

missing_: object

class Field:
    default: object

    def __init__(
        self,
        default: object = missing_,
        attribute: Optional[str] = None,
        load_from: Optional[str] = None,
        dump_to: Optional[str] = None,
        error: Optional[Any] = None,
        validate: Optional[Callable[[Any], bool]] = None,
        required: bool = False,
        allow_none: Optional[bool] = None,
        load_only: bool = False,
        dump_only: bool = False,
        missing: object = missing_,
        error_messages: Optional[dict[str, object]] = None,
        **metadata: Any,
    ): ...
    def serialize(self, attr: str, obj: str, accessor: Optional[Callable[..., object]] = None): ...
    def deserialize(self, value: Any, attr: Optional[str] = None, data: Optional[Any] = None): ...
    def _serialize(self, value: Any, attr: str, obj: object): ...
    def _deserialize(self, value: Any, attr: str, obj: dict[str, object]): ...
    def __deepcopy__(self, memo: Any): ...
    def fail(self, key: str, **kwargs: Any) -> None: ...

class Int(Field): ...
class Float(Field): ...
class String(Field): ...
class List(Field): ...
class Dict(Field): ...
class Nested(Field): ...
class Integer(Field): ...
class Boolean(Field): ...
class Email(Field): ...
