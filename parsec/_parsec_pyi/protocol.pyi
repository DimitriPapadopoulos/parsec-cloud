from typing import Optional
from parsec._parsec_pyi.ids import BlockID, RealmID

class AuthenticatedAnyCmdReq:
    def __repr__(self) -> str: ...
    def dump(self) -> bytes: ...
    def load(buf: bytes) -> BlockReadReq: ...

class InvitedAnyCmdReq:
    def __repr__(self) -> str: ...
    def dump(self) -> bytes: ...
    def load(buf: bytes) -> BlockReadReq: ...

class BlockCreateReq:
    def __init__(self, block_id: BlockID, realm_id: RealmID, block: bytes) -> None: ...
    def __repr__(self) -> str: ...
    def __eq__(self, other: BlockCreateReq) -> bool: ...
    def __ne__(self, other: BlockCreateReq) -> bool: ...
    @property
    def block_id(self) -> BlockID: ...
    @property
    def realm_id(self) -> RealmID: ...
    @property
    def block(self) -> bytes: ...
    def dump(self) -> bytes: ...

class BlockCreateRep:
    def __repr__(self) -> str: ...
    def __eq__(self, other: BlockCreateRep) -> bool: ...
    def __ne__(self, other: BlockCreateRep) -> bool: ...
    def is_ok(self) -> bool: ...
    def Ok() -> BlockCreateRep: ...
    def AlreadyExists() -> BlockCreateRep: ...
    def NotFound() -> BlockCreateRep: ...
    def Timeout() -> BlockCreateRep: ...
    def NotAllowed() -> BlockCreateRep: ...
    def InMaintenance() -> BlockCreateRep: ...
    def AlreadyExists() -> BlockCreateRep: ...
    def dump(self) -> bytes: ...
    def load(buf: bytes) -> BlockCreateRep: ...

class BlockReadReq:
    def __init__(self, block_id: BlockID) -> None: ...
    def __repr__(self) -> str: ...
    def __eq__(self, other: BlockReadReq) -> bool: ...
    def __ne__(self, other: BlockReadReq) -> bool: ...
    @property
    def block_id(self) -> BlockID: ...
    def dump(self) -> bytes: ...

class BlockReadRep:
    def __repr__(self) -> str: ...
    def __eq__(self, other: BlockReadRep) -> bool: ...
    def __ne__(self, other: BlockReadRep) -> bool: ...
    @property
    def block(self) -> Optional[bytes]: ...
    def is_ok(self) -> bool: ...
    def Ok(block: bytes) -> BlockReadRep: ...
    def NotFound() -> BlockReadRep: ...
    def Timeout() -> BlockReadRep: ...
    def NotAllowed() -> BlockReadRep: ...
    def InMaintenance() -> BlockReadRep: ...
    def dump(self) -> bytes: ...
    def load(buf: bytes) -> BlockReadRep: ...
